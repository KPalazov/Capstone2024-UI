[
    {
        "question": "What annotation is commonly used to denote a controller class in Spring Boot?",
        "optionA": "@Controller",
        "optionB": "@RestController",
        "optionC": "@Service",
        "optionD": "@Component",
        "answer": "@RestController"
    },
    {
        "question": "Which dependency injection framework is commonly used in Spring Boot applications?",
        "optionA": "Guice",
        "optionB": "Dagger",
        "optionC": "CDI",
        "optionD": "Spring Framework",
        "answer": "Spring Framework"
    },
    {
        "question": "What annotation is used to define a Spring Boot application's main class?",
        "optionA": "@MainApplication",
        "optionB": "@SpringBootApplication",
        "optionC": "@BootMain",
        "optionD": "@SpringMain",
        "answer": "@SpringBootApplication"
    },
    {
        "question": "What is the default embedded servlet container used in Spring Boot?",
        "optionA": "Tomcat",
        "optionB": "Jetty",
        "optionC": "Undertow",
        "optionD": "GlassFish",
        "answer": "Tomcat"
    },
    {
        "question": "What annotation is used to inject a property value into a Spring Boot bean?",
        "optionA": "@Value",
        "optionB": "@InjectProperty",
        "optionC": "@PropertyInjection",
        "optionD": "@Autowired",
        "answer": "@Value"
    },
    {
        "question": "What annotation is used to enable Spring Data JPA repositories in Spring Boot?",
        "optionA": "@EnableJpaRepositories",
        "optionB": "@EnableDataJpa",
        "optionC": "@EnableRepositories",
        "optionD": "@EnableJpaRepository",
        "answer": "@EnableJpaRepositories"
    },
    {
        "question": "What is the default logging framework used in Spring Boot?",
        "optionA": "Log4j",
        "optionB": "SLF4J",
        "optionC": "JUL (java.util.logging)",
        "optionD": "Logback",
        "answer": "Logback"
    },
    {
        "question": "What annotation is used to specify the primary bean to be injected when there are multiple beans of the same type?",
        "optionA": "@Primary",
        "optionB": "@MainBean",
        "optionC": "@Preferred",
        "optionD": "@Main",
        "answer": "@Primary"
    },
    {
        "question": "What is the purpose of the @SpringBootTest annotation in Spring Boot?",
        "optionA": "To specify properties for the application",
        "optionB": "To enable JUnit testing for the application",
        "optionC": "To define the main class of the application",
        "optionD": "To bootstrap the application context for integration tests",
        "answer": "To bootstrap the application context for integration tests"
    },
    {
        "question": "What annotation is used to define a bean in Spring Boot?",
        "optionA": "@DefineBean",
        "optionB": "@BeanDefinition",
        "optionC": "@Component",
        "optionD": "@DefineComponent",
        "answer": "@Component"
    },
    {
        "question": "What annotation is used to mark a method to handle HTTP GET requests in a Spring Boot RESTful controller?",
        "optionA": "@GetMapping",
        "optionB": "@RequestMethod",
        "optionC": "@HandleGet",
        "optionD": "@RequestHandler",
        "answer": "@GetMapping"
    },
    {
        "question": "Which Spring Boot starter dependency is commonly used for handling data access with JPA?",
        "optionA": "spring-boot-starter-web",
        "optionB": "spring-boot-starter-data-jpa",
        "optionC": "spring-boot-starter-security",
        "optionD": "spring-boot-starter-test",
        "answer": "spring-boot-starter-data-jpa"
    },
    {
        "question": "What annotation is used to configure logging levels in Spring Boot applications?",
        "optionA": "@LogConfig",
        "optionB": "@LogLevels",
        "optionC": "@LogLevelConfig",
        "optionD": "@Slf4j",
        "answer": "@Slf4j"
    },
    {
        "question": "Which of the following is NOT a valid stereotype annotation in Spring Boot?",
        "optionA": "@Component",
        "optionB": "@Controller",
        "optionC": "@Repository",
        "optionD": "@ServiceBean",
        "answer": "@ServiceBean"
    },
    {
        "question": "What annotation is used to enable automatic configuration and component scanning in Spring Boot applications?",
        "optionA": "@EnableAutoConfig",
        "optionB": "@EnableComponentScan",
        "optionC": "@EnableConfiguration",
        "optionD": "@SpringBootApplication",
        "answer": "@SpringBootApplication"
    }
]
